<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
  <mapper namespace="com.hyun.mapper.AdQnaMapper">
      	<sql id="criteria">
	<trim prefix="(" suffix=") AND" prefixOverrides="OR">
		<foreach collection="typeArr" item="type">
			<trim prefix="OR">
				<choose>
					<when test="cri.type == 'C'.toString()">
						QA_TITLE like '%' || #{keyword} || '%'
					</when>
									
					<when test="cri.type == 'N'.toString()">
						QA_CONTENT like '%' || #{keyword} || '%'
					</when>
					
					<when test="cri.type == 'T'.toString()">
						QA_WRITER like '%' || #{keyword} || '%'
					</when>
				</choose>
			</trim>
		</foreach>
	</trim>
	</sql>
	
	
<select id="Adqna_listWithPaging" resultType="com.hyun.domain.QnaVO" parameterType="com.hyun.dto.Criteria">
    <![CDATA[
    SELECT 
    		QA_NUM, ROOT, QA_WRITER, QA_CONTENT, QA_TITLE, QA_REGDATE, QA_UPDATEDATE, STEP, INDENT
    FROM 
    (
        SELECT /*+INDEX_DESC(QA_TBL PK_QA_NUM) */
            rownum rn, QA_NUM, ROOT, QA_WRITER, QA_CONTENT, QA_TITLE, QA_REGDATE, QA_UPDATEDATE, STEP, INDENT
        FROM 
        	QA_TBL
        START WITH 
        	QA_NUM 
        IN (SELECT DISTINCT ROOT FROM QA_TBL WHERE ROOT IS NOT NULL)
        CONNECT BY NOCYCLE PRIOR QA_NUM = ROOT
        ORDER SIBLINGS BY QA_NUM ASC, STEP ASC
    )
    WHERE rn <= #{pageNum} * #{amount}
    AND rn > (#{pageNum} - 1) * #{amount}
    ]]>
</select>


	
		<select id="getTotalCount" resultType ="int">
		SELECT COUNT(*) FROM QA_TBL WHERE
		
		<include refid="criteria"></include>
		QA_NUM > 0
	</select>

   
   	   <select id="Adqna_detail" parameterType="Long" resultType="com.hyun.domain.QnaVO">
   
   SELECT 
   		qa_num, root, qa_writer, qa_content, qa_title, qa_regdate, qa_updatedate , step, indent
	FROM
		QA_TBL
	WHERE
		QA_NUM = #{qa_num}
		
   </select>
   

<insert id="Adqna_reply" statementType="CALLABLE">
    <![CDATA[
        BEGIN
            UPDATE qa_tbl 
            SET step = step + 1
            WHERE root = #{root} AND step > #{step};
            
            INSERT INTO QA_TBL (qa_num, root, qa_writer, qa_content, qa_title, step, indent)
            VALUES (seq_qa_num.NEXTVAL, #{root}, #{qa_writer}, #{qa_content}, #{qa_title}, #{step} + 1, #{indent} + 1);
        END;
    ]]>
</insert>


<update id="Adqna_modify" parameterType="map">
UPDATE 
	QA_TBL 
SET 
	qa_writer = #{qa_writer }, qa_content = #{qa_content }, qa_title = #{qa_title }, qa_updatedate = #{qa_updatedate }
WHERE 
	QA_NUM = #{qa_num }
</update>


<delete id="Adqna_delete" parameterType="Long">
  	DELETE FROM 
  		QA_TBL
  	WHERE
  		QA_NUM = #{qa_num}
</delete>



	
	

	

  </mapper>